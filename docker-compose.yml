version: '3.2'

services:
  redis:
    image: redis:alpine
    ports:
      - 127.0.0.1:6379:6379
    volumes:
      - redis-data:/data

  db:
    image: postgres:12-alpine
    environment:
      # TODO(dmu) MEDIUM: Why do we need `POSTGRES_DB`, `POSTGRES_USER` and `POSTGRES_PASSWORD` here?
      - POSTGRES_DB=thenewboston_pv
      - POSTGRES_USER=thenewboston
      - POSTGRES_PASSWORD=thenewboston
      - C_FORCE_ROOT=true
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - ./scripts/docker_entrypoints/initdb.d:/docker-entrypoint-initdb.d

  pv:
    build: .
    env_file:
      - .env-common
      - .env-pv
      - .env
    entrypoint: /opt/project/scripts/docker_entrypoints/entrypoint_pv.sh
    volumes:
      - .:/opt/project
      - ./media/pv:/opt/project/media
    ports:
      - 8001:8000
    depends_on:
      - db
      - redis
      - celery_pv

  cv1:
    build: .
    env_file:
      - .env-common
      - .env-cv1
      - .env
    entrypoint: /opt/project/scripts/docker_entrypoints/entrypoint_cv.sh
    volumes:
      - .:/opt/project
      - ./media/cv1:/opt/project/media
    ports:
      - 8002:8000
    depends_on:
      - db
      - redis
      - celery_cv1
      # TODO(dmu) HIGH: Why should confirmation validator depend on primary validator?
      - pv

  cv2:
    build: .
    env_file:
      - .env-common
      - .env-cv2
      - .env
    entrypoint: /opt/project/scripts/docker_entrypoints/entrypoint_cv.sh
    volumes:
      - .:/opt/project
      - ./media/cv2:/opt/project/media
    ports:
      - 8003:8000
    depends_on:
      - db
      - redis
      - celery_cv2
      # TODO(dmu) HIGH: Why should confirmation validator depend on primary validator?
      - pv

  bank:
    image: docker.pkg.github.com/thenewboston-developers/bank/bank:latest
    environment:
      - NETWORK_SIGNING_KEY=d2621d30bc323ea35fe1c4fb11b4babb7fd4c1c0593805f011caedf7b7ce0031
      - NODE_IDENTIFIER=ce236a006a0aec488ad8e5161dd018b2ce84d9e4d9adc897eca7fb112864198f
      - NODE_PORT=8004
      - REDIS_DB=3
      - POSTGRES_DB=thenewboston_bank
    env_file:
      - .env-common
      - .env
    entrypoint: /opt/project/scripts/docker_entrypoints/entrypoint.sh
    ports:
      - 8004:8000
    depends_on:
      - db
      - redis
      - celery_bank

  celery_pv:
    build: .
    env_file:
      - .env-common
      - .env-pv
      - .env
    ports:
      - 127.0.0.1:5556:5556
    # TODO(dmu) MEDIUM: Make the command DRY with Makefile
    command: celery -A config.settings worker -l debug -Q celery,block_queue,confirmation_block_queue
    volumes:
      - .:/opt/project
    depends_on:
      - db
      - redis

  celery_cv1:
    build: .
    env_file:
      - .env-common
      - .env-cv1
      - .env
    ports:
      - 127.0.0.1:5557:5557
    # TODO(dmu) MEDIUM: Make the command DRY with Makefile
    command: celery -A config.settings worker -l debug -Q celery,block_queue,confirmation_block_queue
    volumes:
      - .:/opt/project
    depends_on:
      - db
      - redis

  celery_cv2:
    build: .
    env_file:
      - .env-common
      - .env-cv2
      - .env
    ports:
      - 127.0.0.1:5558:5558
    # TODO(dmu) MEDIUM: Make the command DRY with Makefile
    command: celery -A config.settings worker -l debug -Q celery,block_queue,confirmation_block_queue
    volumes:
      - .:/opt/project
    depends_on:
      - db
      - redis

  celery_bank:
    image: docker.pkg.github.com/thenewboston-developers/bank/bank:latest
    environment:
      - NETWORK_SIGNING_KEY=d2621d30bc323ea35fe1c4fb11b4babb7fd4c1c0593805f011caedf7b7ce0031
      - REDIS_DB=3
      - POSTGRES_DB=thenewboston_bank
    env_file:
      - .env-common
      - .env
    ports:
      - 127.0.0.1:5559:5559
    command: celery -A config.settings worker -l debug
    depends_on:
      - db
      - redis

volumes:
  postgresql-data:
    driver: local

  redis-data:
    driver: local
